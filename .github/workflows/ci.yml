name: Test CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üì¶ Install dependencies
        run: |
          pip install -r requirements.txt

      - name: üöÄ Start Flask server
        run: |
          nohup python app.py > flask_output.log 2>&1 &
          echo "Waiting for Flask to start..."
          sleep 15

      - name: üß™ Test Iris prediction API on Windows
        run: |
          Write-Host "Sending test request..."
          $headers = @{ "Content-Type" = "application/json" }
          $body = '{"sepal_length":5.1,"sepal_width":3.5,"petal_length":1.4,"petal_width":0.2}'
          $response = Invoke-RestMethod -Uri http://127.0.0.1:5000/predict -Method Post -Headers $headers -Body $body
          Write-Host "Response: $response"
          if ($response.predicted_species -match "setosa|versicolor|virginica") {
            Write-Host "‚úÖ Prediction successful"
          } else {
            Write-Error "‚ùå Invalid response"
            exit 1
          }
